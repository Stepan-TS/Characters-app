{"ast":null,"code":"var _jsxFileName = \"/Users/stepan12/Documents/characters/src/pages/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\nimport { signInWithPopup } from 'firebase/auth';\nimport './../Login/Login.scss';\nimport Logo from '../../components/Logo/Logo';\nimport { ButtonAuthText } from '../../types';\nimport ButtonAuth from '../../components/Buttons/ButtonAuth/ButtonAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = _ref => {\n  _s();\n  let {\n    setUserName\n  } = _ref;\n  const [authing, setAuthing] = useState(false);\n  const auth = getAuth();\n  const navigate = useNavigate();\n  const signInWithGoogle = async () => {\n    setAuthing(true);\n    signInWithPopup(auth, new GoogleAuthProvider()).then(response => {\n      setUserName(response.user.displayName);\n      navigate('/characters');\n    }).catch(error => {\n      console.log(error);\n      setAuthing(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-page__content-logo\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        onClick: () => signInWithGoogle(),\n        children: /*#__PURE__*/_jsxDEV(ButtonAuth, {\n          ButtonAuthText: ButtonAuthText.SignIn,\n          authing: authing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Xj9OX0P3FyVvJnZEbVWUuzXRw4w=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","getAuth","GoogleAuthProvider","signInWithPopup","Logo","ButtonAuthText","ButtonAuth","jsxDEV","_jsxDEV","LoginPage","_ref","_s","setUserName","authing","setAuthing","auth","navigate","signInWithGoogle","then","response","user","displayName","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SignIn","_c","$RefreshReg$"],"sources":["/Users/stepan12/Documents/characters/src/pages/Login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\nimport { signInWithPopup } from 'firebase/auth';\n\nimport './../Login/Login.scss';\n\nimport Logo from '../../components/Logo/Logo';\n\nimport { ButtonAuthText } from '../../types';\nimport ButtonAuth from '../../components/Buttons/ButtonAuth/ButtonAuth';\n\ntype Props = {\n  setUserName: Function;\n}\n\nconst LoginPage: React.FC<Props> = ({ setUserName }) => {\n  const [authing, setAuthing] = useState(false);\n\n  const auth = getAuth();\n  const navigate = useNavigate();\n\n  const signInWithGoogle = async () => {\n    setAuthing(true);\n\n    signInWithPopup(auth, new GoogleAuthProvider())\n    .then(response => {\n      setUserName(response.user.displayName);\n      navigate('/characters');\n    })\n    .catch((error) => {\n      console.log(error);\n      setAuthing(false);\n    });\n  };\n\n  return (\n    <div className='login-page'>\n      <div className='login-page__content'>\n        <div className='login-page__content-logo'>\n          <Logo />\n        </div>\n\n        <div \n          className='button'\n          onClick={() => signInWithGoogle()} \n        >\n          <ButtonAuth\n            ButtonAuthText={ButtonAuthText.SignIn}\n            authing={authing}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,eAAe,QAAQ,eAAe;AAE/C,OAAO,uBAAuB;AAE9B,OAAOC,IAAI,MAAM,4BAA4B;AAE7C,SAASC,cAAc,QAAQ,aAAa;AAC5C,OAAOC,UAAU,MAAM,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxE,MAAMC,SAA0B,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACjD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMgB,IAAI,GAAGd,OAAO,EAAE;EACtB,MAAMe,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCH,UAAU,CAAC,IAAI,CAAC;IAEhBX,eAAe,CAACY,IAAI,EAAE,IAAIb,kBAAkB,EAAE,CAAC,CAC9CgB,IAAI,CAACC,QAAQ,IAAI;MAChBP,WAAW,CAACO,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC;MACtCL,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBnB,OAAA;MAAKkB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCnB,OAAA;QAAKkB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,eACvCnB,OAAA,CAACJ,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eAENvB,OAAA;QACEkB,SAAS,EAAC,QAAQ;QAClBM,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,EAAG;QAAAU,QAAA,eAElCnB,OAAA,CAACF,UAAU;UACTD,cAAc,EAAEA,cAAc,CAAC4B,MAAO;UACtCpB,OAAO,EAAEA;QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACpB,EAAA,CAvCIF,SAA0B;EAAA,QAIbT,WAAW;AAAA;AAAAkC,EAAA,GAJxBzB,SAA0B;AAyChC,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}